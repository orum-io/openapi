openapi: 3.0.1
info:
  title: Auth API
  description: Orum Auth API.
  version: v2022-09-21
servers:
  - url: https://api-sandbox.orum.io
paths:
  /oauth/token:
    post:
      summary: Request an access token
      tags:
        - How to authenticate
      operationId: post-oauth-token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OauthTokenBody'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OauthTokenBody'
        required: true
      responses:
        '200':
          description: 200 response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthTokenResponse'
        '400':
          description: invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: unauthorized request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: forbidden request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: too many requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal server error.
        '503':
          description: service unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security: []
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://api-sandbox.orum.io/oauth/token
          scopes:
            read:reports: Read reports
            write:reports: Write reports
  schemas:
    ErrorResponse:
      type: object
      properties:
        error_code:
          type: string
        message:
          type: string
      required:
        - error_code
        - message
    OauthTokenBody:
      type: object
      required:
        - client_id
        - client_secret
      properties:
        client_id:
          type: string
          description: ID returned when generating API Credentials.
          x-orum-error-missing:
            message: client_id is required
            code: missing_client_id
          x-orum-error-invalid:
            message: client_id must be a string
            code: invalid_client_id
            status: '400'
        client_secret:
          type: string
          description: Secret returned when generating API Credentials.
          x-orum-error-missing:
            message: client_secret is required
            code: missing_client_secret
          x-orum-error-invalid:
            message: client_secret must be a string
            code: invalid_client_secret
            status: '400'
    OauthTokenResponse:
      title: OauthTokenResponse
      type: object
      required:
        - access_token
        - scope
        - token_type
        - expires_in
      properties:
        access_token:
          type: string
          description: Short-lived auth (access) token that you will pass in the Authorization header of all Deliver calls.
        token_type:
          type: string
          description: The type of token returned. This will always be "Bearer".
        expires_in:
          type: number
          description: The time in seconds until the token expires.
